@startuml
package field {
~class Cell extends Point {
    -Sign sign
    ~enum Sign 

    ~Cell() 
    ~void setSign(Sign sign) 
    ~Sign getSign() 
}
+class Field {
    +{static}final int WIDTH = 10
    +{static}final int HEIGHT = 10
    -Cell[][] cells
    ~enum Answer 

    +Field() 
    +Cell.Sign readFromCell(Point point) 
    +void writeInCell(Point point, Cell.Sign sign) 
    +Answer update(Point point) 
    +void update(Point point, Answer answer) 
    -void init() 
    +boolean isSunk() 
    -void markNeighboringCells(Point point, Cell.Sign sign) 
}
Field o--- Cell
+class Point {
    -int column
    -int row

    +Point(int column, int row) 
    +Point() 
    +int getColumn() 
    +int getRow() 
}
}
package player {
~interface ArrangeShipsBehavior {
    ~void arrangeShips()
}
+abstract class Player {
    -ArrangeShipsBehavior arrangeShipsBehavior
    -ShootBehavior shootBehavior

    ~void arrangeShips() 
    ~Point shoot() 
}
Player o--- ArrangeShipsBehavior
Player o--- ShootBehavior
+interface ShootBehavior {
    ~    Point shoot()
}
}
@enduml
